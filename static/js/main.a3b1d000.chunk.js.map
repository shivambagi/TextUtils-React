{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","placeholder","defaultProps","aboutText","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","useState","text","setText","style","backgroundColor","color","heading","value","rows","onChange","event","target","newText","showAlert","split","map","currentValue","join","document","getElementById","select","navigator","clipboard","writeText","trim","newtext","prompt","includes","joined","reverse","length","App","setmode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3b1d000.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                    </li>         */}\r\n                </ul>\r\n                <div className={`form-check form-switch mx-2 text-${props.mode ==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode Enable</label>\r\n                </div>\r\n                <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title :  PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {title :  \"Set Title here\", aboutText: \"About\"}","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\");    \r\n  };\r\n  const handleLowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Textarea cleared\", \"success\");\r\n  };\r\n  const capitalizeFirstLetter = () => {\r\n    let newText = text.split(\" \").map((currentValue) => {\r\n      let newText =\r\n        currentValue.charAt(0).toUpperCase() + currentValue.slice(1);\r\n      return newText;\r\n    });\r\n    setText(newText.join(\" \"));\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.trim();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\", \"success\");\r\n  };\r\n  const handlePresent = () => {\r\n    let newtext = prompt();\r\n    alert(text.includes(newtext));\r\n  };\r\n  const handleReverse = () => {\r\n    let newtext = text.split(\"\");\r\n    let reverse = newtext.reverse();\r\n    let joined = reverse.join(\"\");\r\n    setText(joined);\r\n    props.showAlert(\"Text Reversed\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"some value\"; //wrong way to change values\r\n  //setText(\"new text\"); //Correct way\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear Text Area\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={capitalizeFirstLetter}\r\n        >\r\n          Capitalize First Letter\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Handle Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlePresent}>\r\n          Check Word Present\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleReverse}>\r\n          Reverse\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h2>Your Text SUmmary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{text.split(\" \").length * 0.008} minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter text to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\"\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\"\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n  const showAlert =(message, type)=>{ \n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  return (\n    <> \n    {/* <Router>   \n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} ></Navbar>\n    <Alert alert={alert}></Alert>\n    <div className=\"container\">    \n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}></TextForm>    \n          </Route>\n        </Switch>         \n    </div>\n    </Router>  */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} ></Navbar>\n    <Alert alert={alert}></Alert>\n    <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}></TextForm>   \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}