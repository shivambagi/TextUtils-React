{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","style","height","width","cursor","htmlFor","placeholder","defaultProps","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","useState","text","setText","color","heading","value","rows","backgroundColor","onChange","event","target","disabled","split","filter","element","length","newText","showAlert","map","currentValue","join","navigator","clipboard","writeText","newtext","prompt","includes","joined","reverse","About","myStyle","class","App","setmode","setAlert","message","setTimeout","cls","document","body","classList","remove","console","log","add","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c083b5ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n            {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> */}\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                    </li>        \r\n                </ul>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                    <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                    <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                    <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n                </div>                \r\n                <div className={`form-check form-switch mx-2 text-${props.mode ==='light'?'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" onClick={()=>{props.toggleMode(null)}} id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode Enable</label>\r\n                </div>\r\n                <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title :  PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {title :  \"Set Title here\", aboutText: \"About\"}","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}      \r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\");    \r\n  };\r\n  const handleLowerClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Textarea cleared\", \"success\");\r\n  };\r\n  const capitalizeFirstLetter = () => {\r\n    let newText = text.split(\" \").map((currentValue) => {\r\n      let newText =\r\n        currentValue.charAt(0).toUpperCase() + currentValue.slice(1);\r\n      return newText;\r\n    });\r\n    setText(newText.join(\" \"));\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);    \r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces removed\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text Copied\", \"success\");\r\n  };\r\n  const handlePresent = () => {\r\n    let newtext = prompt();\r\n    alert(text.includes(newtext));\r\n  };\r\n  const handleReverse = () => {\r\n    let newtext = text.split(\"\");\r\n    let reverse = newtext.reverse();\r\n    let joined = reverse.join(\"\");\r\n    setText(joined);\r\n    props.showAlert(\"Text Reversed\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"some value\"; //wrong way to change values\r\n  //setText(\"new text\"); //Correct way\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\" style={{color: props.mode === \"light\" ? \"black\" : \"white\"}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} id=\"myBox\" rows=\"8\" style={{backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\", color: props.mode === \"light\" ? \"black\" : \"white\",}} onChange={handleOnChange}></textarea>\r\n        </div>        \r\n      </div>\r\n      <div className=\"container\">\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowerClick}>Convert to LowerCase</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text Area</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={capitalizeFirstLetter}>Capitalize First Letter</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Handle Extra Spaces</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlePresent}>Check Word Present</button>\r\n          <button disabled={text.split(/\\s+/).filter((element) => {return element.length!==0} ).length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleReverse}>Reverse</button>\r\n      </div>\r\n      <div className=\"container\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}>\r\n        <h2>Your Text SUmmary</h2>\r\n        <p>\r\n          {text.split(/\\s+/).filter((element) => {return element.length!==0} ).length} words, {text.length} characters\r\n        </p>\r\n        <p>{text.split(\" \").filter((element) => {return element.length!==0} ).length * 0.008} minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothing to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setmyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n\r\n  let myStyle ={\r\n    color: props.mode === 'dark'?'white':'black',\r\n    backgroundColor: props.mode ==='dark'?'grey':'white'\r\n  }\r\n\r\n  // const [btnText, setbtnText] = useState(\"Enable Dark Mode\");\r\n\r\n  // const toggleStyle = () => {\r\n  //   if (myStyle.color === \"white\") {\r\n  //     setmyStyle({\r\n  //       color: \"black\",\r\n  //       backgroundColor: \"white\",\r\n  //       border: \"1px solid white\",\r\n  //     });\r\n  //     setbtnText(\"Enable Dark Mode\");\r\n  //   } else {\r\n  //     setmyStyle({\r\n  //       color: \"white\",\r\n  //       backgroundColor: \"black\",\r\n  //     });\r\n  //     setbtnText(\"Enable Light Mode\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n    <h1 className=\"my-3\" style={{color: props.mode === 'dark'?'white':'black'}} >About Us</h1>\r\n    <div className=\"continer\" style={myStyle}>      \r\n      <div class=\"accordion\" id=\"accordionExample\">\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingOne\">\r\n            <button class=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n            <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" id=\"headingThree\">\r\n            <button class=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div class=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"container my-3\">\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={toggleStyle}>\r\n          {btnText}\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  // const toggleMode = () => {\n  //   if(mode === 'light'){\n  //     setmode('dark');\n  //     document.body.style.backgroundColor = 'grey';\n  //     showAlert(\"Dark mode has been enabled\", \"success\");\n  //     // document.title = \"TextUtils - Dark Mode\"\n  //   }\n  //   else {\n  //     setmode('light');\n  //     document.body.style.backgroundColor = 'white';\n  //     showAlert(\"Light mode has been enabled\", \"success\");\n  //     // document.title = \"TextUtils - Light Mode\"\n  //   }\n  // }\n\nconst removeBodyClasses = () => {\ndocument.body.classList.remove('bg-light')\ndocument.body.classList.remove('bg-dark')\ndocument.body.classList.remove('bg-warning')\ndocument.body.classList.remove('bg-success')\ndocument.body.classList.remove('bg-primary')\ndocument.body.classList.remove('bg-danger')\n}\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add('bg-'+cls);\n    if (cls === null){\n      if(mode === 'light'){\n        setmode('dark');\n        document.body.style.backgroundColor = 'grey';\n        showAlert(\"Dark mode has been enabled\", \"success\");\n        // document.title = \"TextUtils - Dark Mode\"\n      }\n      else {\n        setmode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light mode has been enabled\", \"success\");\n        // document.title = \"TextUtils - Light Mode\"\n      }\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n  const showAlert =(message, type)=>{ \n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n\n  return (\n    <> \n    <Router>   \n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} ></Navbar>\n    <Alert alert={alert}></Alert>\n    <div className=\"container\">    \n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}></TextForm>    \n          </Route>\n        </Switch>         \n    </div>\n    </Router> \n\n    {/* Without Router */}\n    {/* <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} ></Navbar>  \n    <Alert alert={alert}></Alert>\n    <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}></TextForm>    */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}